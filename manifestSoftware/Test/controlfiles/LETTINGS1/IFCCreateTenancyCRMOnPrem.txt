WWW.BLAZE-IS.COM
DELIM=$$
TYPE=INTERFACE
FROM=Orchard Housing Database
TIMER=900
DESCRIPTION=Creates Tenancy record in Orchard 
TRIGGER=
TRIGGERFIELDS=
$$

/*
-- =======================================================================================================================================
--	Author:			Matt Toynbee
--	Description:	Creates Tenancy record in Orchard
-- =======================================================================================================================================
--	Change log:
--	Version			Date		Author				Description
--  -------			----------	----------------	----------------------------------------------------
--	v1.1			
-- =======================================================================================================================================
*/

// Param1 = OrchardLogin
// Param2 = LoginPassword
// Param3 = APPLICATION_NO
// Param4 = HOUSEHOLD_GROUP_CODE
// Param5 = SIGNUP_COMP_DATE
// Param6 = SWIPE_EFFECTIVE_DATE
// Param7 = SWIPE_REQ_TYPE
// Param8 = TENANCY_REASON_CODE,
// Param9 = TEN_START_DATE,
// Param10 = TEN_TENURE_TYPE_CODE
// Param11 = PROPERTY_SEQ_NUM

P=ReadThreadParameters("C:\ManifestSoftware\TEST\ControlFiles\THREADPARAMS.xml")

// Create Log GUID
SQLG=SQLSELECTNEWGUID($$P.HEADER.SQLInstance$$,$$P.HEADER.SQLDatabase$$,$$P.HEADER.SQLUser$$,$$P.HEADER.SQLPassword$$)

// Create process queue entries
SQLQ=SQLINSERTPendingCreateTenancyRequests($$P.HEADER.SQLInstance$$,$$P.HEADER.SQLDatabase$$,$$P.HEADER.SQLUser$$,$$P.HEADER.SQLPassword$$)

NEXTRECORD:

// Select next Tenancy to create in MRI
TEN=SQLSELECTNextCreateTenancyWorkflow($$P.HEADER.SQLInstance$$,$$P.HEADER.SQLDatabase$$,$$P.HEADER.SQLUser$$,$$P.HEADER.SQLPassword$$,"Create Tenancy (CRM On-Prem)")

// If no more records to process, finish process.
IFGOTO($$TEN.HEADER.QueueID$$,"=","","END:")

// Mark record as pre-processed
SQLP=SQLUPDATELettingsProcessQueue($$P.HEADER.SQLInstance$$,$$P.HEADER.SQLDatabase$$,$$P.HEADER.SQLUser$$,$$P.HEADER.SQLPassword$$,$$TEN.HEADER.QueueID$$,"Pre-Processed","","")

//
// DYNAMIC CRM ON-PREMISES VERSION
//

//Get the lead tenant details
LEADTEN=SQLGetLeadTenant($$P.HEADER.SQLInstance$$,$$P.HEADER.SQLDatabase$$,$$P.HEADER.SQLUser$$,$$P.HEADER.SQLPassword$$,$$TEN.HEADER.TenancyNumber$$)

// Log Data
SQLAUD=SQLINSERTLettingsAuditLog($$P.HEADER.SQLInstance$$,$$P.HEADER.SQLDatabase$$,$$P.HEADER.SQLUser$$,$$P.HEADER.SQLPassword$$,$$TEN.HEADER.QueueID$$,$$TEN.HEADER.BatchGUID$$,"IFCCreateTenancyCRMOnPremise","SQLGetLeadTenant","PersonNo",$$LEADTEN.HEADER.PersonNo$$)

// Check if mandatory data missing
SQLMAND=SQLUPDATELettingsProcessQueue($$P.HEADER.SQLInstance$$,$$P.HEADER.SQLDatabase$$,$$P.HEADER.SQLUser$$,$$P.HEADER.SQLPassword$$,$$TEN.HEADER.QueueID$$,"MandatoryParam","SQLGetLeadTenant",$$LEADTEN.HEADER.PersonNo$$)

// If no Person number go to Next Record
IFGOTO($$SQLMAND.HEADER.QueueID$$,"<>","","NEXTRECORD:")

//Commented out - assumed used for debuggin
//LEADTEN=SQLGetLeadTenant("ManifestDB" ,"ManifestTest","manifest",$$P.HEADER.SQLPassword$$,"326142")

// Get Contact GUID
FINDC=DYNAMICSFindContact("x","",$$TP.HEADER.CRMWSUser$$,$$TP.HEADER.CRMWSPass$$,$$P.HEADER.CRMURL$$,"contacts","contactid",$$LEADTEN.HEADER.PersonNo$$)

// Parse Response
CONTGUID=JSONGetGUIDContactNEW($$FINDC.RESPONSE$$,"OBJECT")

// Log Response from MRI
LOGRESP=SQLINSERTMSSRequestResponse($$P.HEADER.SQLInstance$$,$$P.HEADER.SQLDatabase$$,$$P.HEADER.SQLUser$$,$$P.HEADER.SQLPassword$$,$$SQLG.HEADER.GUID$$,"IFCCreateTenancyCRMOnPremise","DYNAMICSFindContact - Response",$$FINDC.RESPONSE$$)

// Log Error from MRI
LOGERR=SQLINSERTMSSRequestResponse($$P.HEADER.SQLInstance$$,$$P.HEADER.SQLDatabase$$,$$P.HEADER.SQLUser$$,$$P.HEADER.SQLPassword$$,$$SQLG.HEADER.GUID$$,"IFCCreateTenancyCRMOnPremise","DYNAMICSFindContact - Error",$$FINDC.ERROR$$)

// Log Data
SQLAUD=SQLINSERTLettingsAuditLog($$P.HEADER.SQLInstance$$,$$P.HEADER.SQLDatabase$$,$$P.HEADER.SQLUser$$,$$P.HEADER.SQLPassword$$,$$TEN.HEADER.QueueID$$,$$TEN.HEADER.BatchGUID$$,"IFCCreateTenancyCRMOnPremise","DYNAMICSFindContact","ID",$$CONTGUID.HEADER.ID$$)

// Mark as errored
SQLERR=SQLUPDATELettingsProcessQueue($$P.HEADER.SQLInstance$$,$$P.HEADER.SQLDatabase$$,$$P.HEADER.SQLUser$$,$$P.HEADER.SQLPassword$$,$$TEN.HEADER.QueueID$$,"Error","DYNAMICSFindContact",$$FINDC.ERROR$$)

// If error reported - notify business
IFGOTO($$SQLERR.HEADER.QueueID$$,"<>","","NEXTRECORD:")

// Get Property Details
FINDP=DYNAMICSFindProperty("x","",$$TP.HEADER.CRMWSUser$$,$$TP.HEADER.CRMWSPass$$,$$P.HEADER.CRMURL$$,"gcs_properties","gcs_propertyid,gcs_addressline1,gcs_addressline2,gcs_addressline3,gcs_commonarea,gcs_postcode",$$LEADTEN.HEADER.PropertyNo$$)

// Parse Property Details
PROPGUID=JSONGetGUIDProperty($$FINDP.RESPONSE$$,"OBJECT")

// Log Data
SQLAUD=SQLINSERTLettingsAuditLog($$P.HEADER.SQLInstance$$,$$P.HEADER.SQLDatabase$$,$$P.HEADER.SQLUser$$,$$P.HEADER.SQLPassword$$,$$TEN.HEADER.QueueID$$,$$TEN.HEADER.BatchGUID$$,"IFCCreateTenancyCRMOnPremise","DYNAMICSFindProperty","ID",$$PROPGUID.HEADER.ID$$)

//Dynamics doesnt like blanks so default a 0 if nothings returned from OIS for  benefits
IFGOTO($$LEADTEN.HEADER.BenefitVal$$,"=","","THISONE:")

TCYADD=DYNAMICSADDTenancy("x","",$$TP.HEADER.CRMWSUser$$,$$TP.HEADER.CRMWSPass$$,$$P.HEADER.CRMURL$$,"gcs_tenancies","ADD",$$LEADTEN.HEADER.TenancyID$$,$$LEADTEN.HEADER.PersonNo$$,$$LEADTEN.HEADER.PropertyNo$$,$$LEADTEN.HEADER.TenureCode$$,$$LEADTEN.HEADER.TenureDescription$$,$$LEADTEN.HEADER.Nonrentval$$,$$LEADTEN.HEADER.Rentval$$,$$LEADTEN.HEADER.StartDate$$,$$LEADTEN.HEADER.BenefitVal$$,"Current Tenant","TC",$$LEADTEN.HEADER.Checkdigit$$,$$CONTGUID.HEADER.ID$$,$$PROPGUID.HEADER.ID$$,$$LEADTEN.HEADER.GrossRent$$,$$LEADTEN.HEADER.NetRent$$)

// Mark as processed
SQLP=SQLUPDATELettingsProcessQueue($$P.HEADER.SQLInstance$$,$$P.HEADER.SQLDatabase$$,$$P.HEADER.SQLUser$$,$$P.HEADER.SQLPassword$$,$$TEN.HEADER.QueueID$$,"Processed","","")

//dont add it twice so go here
GOTO("HERE:")

THISONE:
TCYADD=DYNAMICSADDTenancy("x","",$$TP.HEADER.CRMWSUser$$,$$TP.HEADER.CRMWSPass$$,$$P.HEADER.CRMURL$$,"gcs_tenancies","ADD",$$LEADTEN.HEADER.TenancyID$$,$$LEADTEN.HEADER.PersonNo$$,$$LEADTEN.HEADER.PropertyNo$$,$$LEADTEN.HEADER.TenureCode$$,$$LEADTEN.HEADER.TenureDescription$$,$$LEADTEN.HEADER.Nonrentval$$,$$LEADTEN.HEADER.Rentval$$,$$LEADTEN.HEADER.StartDate$$,"0.0","Current Tenant","TC",$$LEADTEN.HEADER.Checkdigit$$,$$CONTGUID.HEADER.ID$$,$$PROPGUID.HEADER.ID$$,$$LEADTEN.HEADER.GrossRent$$,$$LEADTEN.HEADER.NetRent$$)

// Mark as processed
SQLP=SQLUPDATELettingsProcessQueue($$P.HEADER.SQLInstance$$,$$P.HEADER.SQLDatabase$$,$$P.HEADER.SQLUser$$,$$P.HEADER.SQLPassword$$,$$TEN.HEADER.QueueID$$,"Processed","","")

HERE:
FINDT=DYNAMICSFindTenancy("x","",$$TP.HEADER.CRMWSUser$$,$$TP.HEADER.CRMWSPass$$,$$P.HEADER.CRMURL$$,"gcs_tenancies","gcs_tenancyid",$$LEADTEN.HEADER.TenancyID$$)


TENGUID=JSONGetGUIDTenancy($$FINDT.RESPONSE$$,"OBJECT")

//then add or update
UPDATELEAD:
//Update contact record
CONTUPD=DYNAMICSUPDATEContact("x","",$$TP.HEADER.CRMWSUser$$,$$TP.HEADER.CRMWSPass$$,$$P.HEADER.CRMURL$$,"contacts","UPDATE",$$CONTGUID.HEADER.ID$$,$$LEADTEN.HEADER.PropertyNo$$,$$LEADTEN.HEADER.TenancyID$$,$$LEADTEN.HEADER.TenureDescription$$,$$LEADTEN.HEADER.PersonNo$$,$$LEADTEN.HEADER.FirstName$$,$$LEADTEN.HEADER.Surname$$,$$LEADTEN.HEADER.NINO$$,$$LEADTEN.HEADER.DOB$$,$$LEADTEN.HEADER.EMAIL$$,$$LEADTEN.HEADER.MOBTEL$$,$$LEADTEN.HEADER.MOBTEL2$$,$$LEADTEN.HEADER.HOMETEL$$,$$LEADTEN.HEADER.WORKTEL$$,$$LEADTEN.HEADER.Language$$,$$LEADTEN.HEADER.Ethnicity$$,$$LEADTEN.HEADER.Religion$$,$$PROPGUID.HEADER.Addr1$$,$$PROPGUID.HEADER.Addr2$$,$$PROPGUID.HEADER.Addr3$$,$$PROPGUID.HEADER.Area$$,$$PROPGUID.HEADER.Postcode$$,$$LEADTEN.HEADER.IncomeOfficer$$,$$LEADTEN.HEADER.CustomerTypeCode$$)


//add title afterward as cant send a blank
FINDTITLE:
CRMTITLE=SQLGetTitle($$P.HEADER.SQLInstance$$,$$P.HEADER.SQLDatabase$$,$$P.HEADER.SQLUser$$,$$P.HEADER.SQLPassword$$,$$LEADTEN.HEADER.Title$$)


IFGOTO($$CRMTITLE.HEADER.Title$$,"=","","UPDLANG:")

UPDTITLE=DYNAMICSUPDATEContactTitle("x","",$$TP.HEADER.CRMWSUser$$,$$TP.HEADER.CRMWSPass$$,$$P.HEADER.CRMURL$$,"contacts","UPDATE",$$CONTGUID.HEADER.ID$$,$$CRMTITLE.HEADER.Title$$)


UPDLANG:
IFGOTO($$LEADTEN.HEADER.Language$$,"=","","UPDREL:")

LANG=DYNAMICSUPDATEContactLanguageNew("x","",$$TP.HEADER.CRMWSUser$$,$$TP.HEADER.CRMWSPass$$,$$P.HEADER.CRMURL$$,"contacts","UPDATE",$$CONTGUID.HEADER.ID$$,$$LEADTEN.HEADER.Language$$,"")


UPDREL:
IFGOTO($$LEADTEN.HEADER.Religion$$,"=","","UPDETH:")

REL=DYNAMICSUPDATEContactReligion("x","",$$TP.HEADER.CRMWSUser$$,$$TP.HEADER.CRMWSPass$$,$$P.HEADER.CRMURL$$,"contacts","UPDATE",$$CONTGUID.HEADER.ID$$,$$LEADTEN.HEADER.Religion$$,"")


UPDETH:
IFGOTO($$LEADTEN.HEADER.Ethnicity$$,"=","","LTHH:")

ETH=DYNAMICSUPDATEContactEthnicity("x","",$$TP.HEADER.CRMWSUser$$,$$TP.HEADER.CRMWSPass$$,$$P.HEADER.CRMURL$$,"contacts","UPDATE",$$CONTGUID.HEADER.ID$$,$$LEADTEN.HEADER.Ethnicity$$,"")


//Add LT household record
LTHH:
HHADDLT=DYNAMICSADDHousehold2("x","",$$TP.HEADER.CRMWSUser$$,$$TP.HEADER.CRMWSPass$$,$$P.HEADER.CRMURL$$,"gcs_households","ADD",$$LEADTEN.HEADER.TenancyID$$,$$LEADTEN.HEADER.StartDate$$,$$LEADTEN.HEADER.PersonNo$$,"Lead Tenant",$$CONTGUID.HEADER.ID$$,$$TENGUID.HEADER.ID$$,"")



JOINT:

//Find the person number for this tenancy
JOINTPER=SQLSELECTJointPersonNum($$P.HEADER.SQLInstance$$,$$P.HEADER.SQLDatabase$$,$$P.HEADER.SQLUser$$,$$P.HEADER.SQLPassword$$,$$LEADTEN.HEADER.TenancyID$$)


IFGOTO($$JOINTPER.HEADER.PersonNum$$,"=","","HOUSEHOLDERS:")

//Update Tenant Comms with their details
TENCOMMS=SQLMergeTenantComms($$P.HEADER.SQLInstance$$,$$P.HEADER.SQLDatabase$$,$$P.HEADER.SQLUser$$,$$P.HEADER.SQLPassword$$,"800",$$JOINTPER.HEADER.PersonNum$$)


//search OIS for Joint Tenant info
JOINTTEN=SQLGetJointTenant($$P.HEADER.SQLInstance$$,$$P.HEADER.SQLDatabase$$,$$P.HEADER.SQLUser$$,$$P.HEADER.SQLPassword$$,$$LEADTEN.HEADER.TenancyID$$)


IFGOTO($$JOINTTEN.HEADER.PersonNo$$,"=","","HOUSEHOLDERS:")

//find guid first
JTFIND=DYNAMICSFindContact("x","",$$TP.HEADER.CRMWSUser$$,$$TP.HEADER.CRMWSPass$$,$$P.HEADER.CRMURL$$,"contacts","contactid",$$JOINTTEN.HEADER.PersonNo$$)
JTGUID=JSONGetGUIDContactNEW($$JTFIND.RESPONSE$$,"OBJECT")
IFGOTO($$JTGUID.HEADER.ID$$,"=","","ADDJOINT:")

UPDATEJOINT:
//Update contact record
CONTUPD=DYNAMICSUPDATEContact("x","",$$TP.HEADER.CRMWSUser$$,$$TP.HEADER.CRMWSPass$$,$$P.HEADER.CRMURL$$,"contacts","UPDATE",$$JTGUID.HEADER.ID$$,$$JOINTTEN.HEADER.PropertyNo$$,$$JOINTTEN.HEADER.TenancyID$$,$$JOINTTEN.HEADER.TenureDescription$$,$$JOINTTEN.HEADER.PersonNo$$,$$JOINTTEN.HEADER.FirstName$$,$$JOINTTEN.HEADER.Surname$$,$$JOINTTEN.HEADER.NINO$$,$$JOINTTEN.HEADER.DOB$$,$$JOINTTEN.HEADER.EMAIL$$,$$JOINTTEN.HEADER.MOBTEL$$,$$JOINTTEN.HEADER.MOBTEL2$$,$$JOINTTEN.HEADER.HOMETEL$$,$$JOINTTEN.HEADER.WORKTEL$$,$$JOINTTEN.HEADER.Language$$,$$JOINTTEN.HEADER.Ethnicity$$,$$JOINTTEN.HEADER.Religion$$,$$PROPGUID.HEADER.Addr1$$,$$PROPGUID.HEADER.Addr2$$,$$PROPGUID.HEADER.Addr3$$,$$PROPGUID.HEADER.Area$$,$$PROPGUID.HEADER.Postcode$$,$$LEADTEN.HEADER.IncomeOfficer$$,$$LEADTEN.HEADER.CustomerTypeCode$$)


UPDTEN=DYNAMICSUPDATETenancy("x","",$$TP.HEADER.CRMWSUser$$,$$TP.HEADER.CRMWSPass$$,$$P.HEADER.CRMURL$$,"gcs_tenancies","UPDATE",$$TENGUID.HEADER.ID$$,$$JTGUID.HEADER.ID$$)


GOTO("FINDJTTITLE:")

ADDJOINT:
//Create Contact in CRM
JOINTADD=DYNAMICSADDContact("x","",$$TP.HEADER.CRMWSUser$$,$$TP.HEADER.CRMWSPass$$,$$P.HEADER.CRMURL$$,"contacts","ADD",$$JOINTTEN.HEADER.PropertyNo$$,$$JOINTTEN.HEADER.TenancyID$$,$$JOINTTEN.HEADER.TenureDescription$$,$$JOINTTEN.HEADER.PersonNo$$,$$JOINTTEN.HEADER.FirstName$$,$$JOINTTEN.HEADER.Surname$$,$$JOINTTEN.HEADER.NINO$$,$$JOINTTEN.HEADER.DOB$$,$$JOINTTEN.HEADER.EMAIL$$,$$JOINTTEN.HEADER.MOBTEL$$,$$JOINTTEN.HEADER.MOBTEL2$$,$$JOINTTEN.HEADER.HOMETEL$$,$$JOINTTEN.HEADER.WORKTEL$$,$$JOINTTEN.HEADER.Language$$,$$JOINTTEN.HEADER.Ethnicity$$,$$JOINTTEN.HEADER.Religion$$,$$PROPGUID.HEADER.Addr1$$,$$PROPGUID.HEADER.Addr2$$,$$PROPGUID.HEADER.Addr3$$,$$PROPGUID.HEADER.Area$$,$$PROPGUID.HEADER.Postcode$$,$$LEADTEN.HEADER.IncomeOfficer$$,$$LEADTEN.HEADER.CustomerTypeCode$$)


JTFIND=DYNAMICSFindContact("x","",$$TP.HEADER.CRMWSUser$$,$$TP.HEADER.CRMWSPass$$,$$P.HEADER.CRMURL$$,"contacts","contactid",$$JOINTTEN.HEADER.PersonNo$$)
JTGUID=JSONGetGUIDContactNEW($$JTFIND.RESPONSE$$,"OBJECT")


ADDJTVCS:
//Find visual cues
SQLJTVC=SQLGetVisualCues($$P.HEADER.SQLInstance$$,$$P.HEADER.SQLDatabase$$,$$P.HEADER.SQLUser$$,$$P.HEADER.SQLPassword$$,$$JOINTTEN.HEADER.PersonNo$$)


IFGOTO($$SQLJTVC.DETAIL.CRM_Guid$$,"=","","UPDTEN:")

//Add all to visual cues table
JTVCADD=DYNAMICSADDVisualCues("x","",$$TP.HEADER.CRMWSUser$$,$$TP.HEADER.CRMWSPass$$,$$P.HEADER.CRMURL$$,"gcs_visualcuecontexttexts","ADD","contact",$$JTGUID.HEADER.ID$$,$$SQLJTVC.DETAIL.CUEDesc$$,$$SQLJTVC.DETAIL.CRM_Guid$$)


//Update contact flag for VC's
JTVCCONTUPD=DYNAMICSUPDATEContactVCField("x","",$$TP.HEADER.CRMWSUser$$,$$TP.HEADER.CRMWSPass$$,$$P.HEADER.CRMURL$$,"contacts","UPDATE",$$JTGUID.HEADER.ID$$,$$SQLJTVC.DETAIL.ContactField$$)


UPDTEN:
UPDTEN=DYNAMICSUPDATETenancy("x","",$$TP.HEADER.CRMWSUser$$,$$TP.HEADER.CRMWSPass$$,$$P.HEADER.CRMURL$$,"gcs_tenancies","UPDATE",$$TENGUID.HEADER.ID$$,$$JTGUID.HEADER.ID$$)


//add title afterward as cant send a blank
FINDJTTITLE:
CRMJTTITLE=SQLGetTitle($$P.HEADER.SQLInstance$$,$$P.HEADER.SQLDatabase$$,$$P.HEADER.SQLUser$$,$$P.HEADER.SQLPassword$$,$$JOINTTEN.HEADER.Title$$)


IFGOTO($$CRMJTTITLE.HEADER.Title$$,"=","","UPDJTLANG:")

UPDJTTITLE=DYNAMICSUPDATEContactTitle("x","",$$TP.HEADER.CRMWSUser$$,$$TP.HEADER.CRMWSPass$$,$$P.HEADER.CRMURL$$,"contacts","UPDATE",$$JTGUID.HEADER.ID$$,$$CRMJTTITLE.HEADER.Title$$)


UPDJTLANG:
IFGOTO($$JOINTTEN.HEADER.Language$$,"=","","UPDJTREL:")

JTLANG=DYNAMICSUPDATEContactLanguageNew("x","",$$TP.HEADER.CRMWSUser$$,$$TP.HEADER.CRMWSPass$$,$$P.HEADER.CRMURL$$,"contacts","UPDATE",$$JTGUID.HEADER.ID$$,$$JOINTTEN.HEADER.Language$$,"")


UPDJTREL:
IFGOTO($$JOINTTEN.HEADER.Religion$$,"=","","UPDJTETH:")

JTREL=DYNAMICSUPDATEContactReligion("x","",$$TP.HEADER.CRMWSUser$$,$$TP.HEADER.CRMWSPass$$,$$P.HEADER.CRMURL$$,"contacts","UPDATE",$$JTGUID.HEADER.ID$$,$$JOINTTEN.HEADER.Religion$$,"")

UPDJTETH:
IFGOTO($$JOINTTEN.HEADER.Ethnicity$$,"=","","JTHH:")

JTETH=DYNAMICSUPDATEContactEthnicity("x","",$$TP.HEADER.CRMWSUser$$,$$TP.HEADER.CRMWSPass$$,$$P.HEADER.CRMURL$$,"contacts","UPDATE",$$JTGUID.HEADER.ID$$,$$JOINTTEN.HEADER.Ethnicity$$,"")

JTHH:
//Add JT household record
HHADDJT=DYNAMICSADDHousehold2("x","",$$TP.HEADER.CRMWSUser$$,$$TP.HEADER.CRMWSPass$$,$$P.HEADER.CRMURL$$,"gcs_households","ADD",$$JOINTTEN.HEADER.TenancyID$$,$$JOINTTEN.HEADER.StartDate$$,$$JOINTTEN.HEADER.PersonNo$$,"Joint Tenant",$$JTGUID.HEADER.ID$$,$$TENGUID.HEADER.ID$$,"")


HOUSEHOLDERS:
//replace with parameter
HOUSEH=SQLGetHouseholdersCRM($$P.HEADER.SQLInstance$$,$$P.HEADER.SQLDatabase$$,$$P.HEADER.SQLUser$$,$$P.HEADER.SQLPassword$$,$$LEADTEN.HEADER.TenancyID$$)

// Mark as processed
SQLP=SQLUPDATELettingsProcessQueue($$P.HEADER.SQLInstance$$,$$P.HEADER.SQLDatabase$$,$$P.HEADER.SQLUser$$,$$P.HEADER.SQLPassword$$,$$TEN.HEADER.QueueID$$,"Processed","","")

IFGOTO($$HOUSEH.HEADER.PersonNo$$,"=","","NEXTRECORD:")

SQLINS=SQLINSERTHouseholders($$P.HEADER.SQLInstance$$,$$P.HEADER.SQLDatabase$$,$$P.HEADER.SQLUser$$,$$P.HEADER.SQLPassword$$,$$HOUSEH.DETAIL.PropertyNo$$,$$HOUSEH.DETAIL.TenancyID$$,$$HOUSEH.DETAIL.TenureDescription$$,$$HOUSEH.DETAIL.PersonNo$$,$$HOUSEH.DETAIL.Title$$,$$HOUSEH.DETAIL.FirstName$$,$$HOUSEH.DETAIL.Surname$$,$$HOUSEH.DETAIL.NINO$$,$$HOUSEH.DETAIL.DOB$$,$$HOUSEH.DETAIL.EMAIL$$,$$HOUSEH.DETAIL.MOBTEL$$,$$HOUSEH.DETAIL.MOBTEL2$$,$$HOUSEH.DETAIL.HOMETEL$$,$$HOUSEH.DETAIL.WORKTEL$$,$$HOUSEH.DETAIL.Language$$,$$HOUSEH.DETAIL.Ethnicity$$,$$HOUSEH.DETAIL.Religion$$,$$HOUSEH.DETAIL.Relationship$$)

GETHH:

//replace with parameter
GETHH=SQLGetHouseholders($$P.HEADER.SQLInstance$$,$$P.HEADER.SQLDatabase$$,$$P.HEADER.SQLUser$$,$$P.HEADER.SQLPassword$$,$$LEADTEN.HEADER.TenancyID$$)

IFGOTO($$GETHH.HEADER.Personno$$,"=","","NEXTRECORD:")

//find guid first
HHFIND=DYNAMICSFindContact("x","",$$TP.HEADER.CRMWSUser$$,$$TP.HEADER.CRMWSPass$$,$$P.HEADER.CRMURL$$,"contacts","contactid",$$GETHH.HEADER.Personno$$)
HHGUID=JSONGetGUIDContactNEW($$HHFIND.RESPONSE$$,"OBJECT")
IFGOTO($$HHGUID.HEADER.ID$$,"=","","ADDHH:")

UPDATEHH:

//Update contact record
CONTUPD=DYNAMICSUPDATEContact("x","",$$TP.HEADER.CRMWSUser$$,$$TP.HEADER.CRMWSPass$$,$$P.HEADER.CRMURL$$,"contacts","UPDATE",$$HHGUID.HEADER.ID$$,$$LEADTEN.HEADER.PropertyNo$$,$$GETHH.HEADER.TenancyID$$,$$LEADTEN.HEADER.TenureDescription$$,$$GETHH.HEADER.Personno$$,$$GETHH.HEADER.FirstName$$,$$GETHH.HEADER.Surname$$,$$GETHH.HEADER.NINO$$,$$GETHH.HEADER.DOB$$,$$GETHH.HEADER.EMAIL$$,$$GETHH.HEADER.MOBTEL$$,$$GETHH.HEADER.MOBTEL2$$,$$GETHH.HEADER.HOMETEL$$,$$GETHH.HEADER.WORKTEL$$,$$GETHH.HEADER.Language$$,$$GETHH.HEADER.Ethnicity$$,$$GETHH.HEADER.Religion$$,$$PROPGUID.HEADER.Addr1$$,$$PROPGUID.HEADER.Addr2$$,$$PROPGUID.HEADER.Addr3$$,$$PROPGUID.HEADER.Area$$,$$PROPGUID.HEADER.Postcode$$,$$LEADTEN.HEADER.IncomeOfficer$$,$$LEADTEN.HEADER.CustomerTypeCode$$)

GOTO("FINDHHTITLE:")

ADDHH:
//Create Household Contact in CRM
HHADD=DYNAMICSADDContact("x","",$$TP.HEADER.CRMWSUser$$,$$TP.HEADER.CRMWSPass$$,$$P.HEADER.CRMURL$$,"contacts","ADD",$$LEADTEN.HEADER.PropertyNo$$,$$GETHH.HEADER.TenancyID$$,$$LEADTEN.HEADER.TenureDescription$$,$$GETHH.HEADER.Personno$$,$$GETHH.HEADER.FirstName$$,$$GETHH.HEADER.Surname$$,$$GETHH.HEADER.NINO$$,$$GETHH.HEADER.DOB$$,$$GETHH.HEADER.EMAIL$$,$$GETHH.HEADER.MOBTEL$$,$$GETHH.HEADER.MOBTEL2$$,$$GETHH.HEADER.HOMETEL$$,$$GETHH.HEADER.WORKTEL$$,$$GETHH.HEADER.Language$$,$$GETHH.HEADER.Ethnicity$$,$$GETHH.HEADER.Religion$$,$$PROPGUID.HEADER.Addr1$$,$$PROPGUID.HEADER.Addr2$$,$$PROPGUID.HEADER.Addr3$$,$$PROPGUID.HEADER.Area$$,$$PROPGUID.HEADER.Postcode$$,$$LEADTEN.HEADER.IncomeOfficer$$,$$LEADTEN.HEADER.CustomerTypeCode$$)

HHFIND=DYNAMICSFindContact("x","",$$TP.HEADER.CRMWSUser$$,$$TP.HEADER.CRMWSPass$$,$$P.HEADER.CRMURL$$,"contacts","contactid",$$GETHH.HEADER.Personno$$)
HHGUID=JSONGetGUIDContactNEW($$HHFIND.RESPONSE$$,"OBJECT")

ADDHHVCS:

//Find visual cues
SQLHHVC=SQLGetVisualCues($$P.HEADER.SQLInstance$$,$$P.HEADER.SQLDatabase$$,$$P.HEADER.SQLUser$$,$$P.HEADER.SQLPassword$$,$$GETHH.HEADER.Personno$$)

IFGOTO($$SQLHHVC.DETAIL.CRM_Guid$$,"=","","FINDHHTITLE:")

//Add all to visual cues table
HHVCADD=DYNAMICSADDVisualCues("x","",$$TP.HEADER.CRMWSUser$$,$$TP.HEADER.CRMWSPass$$,$$P.HEADER.CRMURL$$,"gcs_visualcuecontexttexts","ADD","contact",$$HHGUID.HEADER.ID$$,$$SQLHHVC.DETAIL.CUEDesc$$,$$SQLHHVC.DETAIL.CRM_Guid$$)

//Update contact flag for VC's
HHVCCONTUPD=DYNAMICSUPDATEContactVCField("x","",$$TP.HEADER.CRMWSUser$$,$$TP.HEADER.CRMWSPass$$,$$P.HEADER.CRMURL$$,"contacts","UPDATE",$$HHGUID.HEADER.ID$$,$$SQLHHVC.DETAIL.ContactField$$)

//add title afterward as cant send a blank
FINDHHTITLE:
CRMHHTITLE=SQLGetTitle($$P.HEADER.SQLInstance$$,$$P.HEADER.SQLDatabase$$,$$P.HEADER.SQLUser$$,$$P.HEADER.SQLPassword$$,$$GETHH.HEADER.Title$$)

IFGOTO($$CRMHHTITLE.HEADER.Title$$,"=","","UPDHHLANG:")

UPDHHTITLE=DYNAMICSUPDATEContactTitle("x","",$$TP.HEADER.CRMWSUser$$,$$TP.HEADER.CRMWSPass$$,$$P.HEADER.CRMURL$$,"contacts","UPDATE",$$HHGUID.HEADER.ID$$,$$CRMHHTITLE.HEADER.Title$$)

UPDHHLANG:
IFGOTO($$GETHH.HEADER.Language$$,"=","","UPDHHREL:")

HHLANG=DYNAMICSUPDATEContactLanguageNew("x","",$$TP.HEADER.CRMWSUser$$,$$TP.HEADER.CRMWSPass$$,$$P.HEADER.CRMURL$$,"contacts","UPDATE",$$HHGUID.HEADER.ID$$,$$GETHH.HEADER.Language$$,"")

UPDHHREL:
IFGOTO($$GETHH.HEADER.Religion$$,"=","","UPDHHETH:")

HHREL=DYNAMICSUPDATEContactReligion("x","",$$TP.HEADER.CRMWSUser$$,$$TP.HEADER.CRMWSPass$$,$$P.HEADER.CRMURL$$,"contacts","UPDATE",$$HHGUID.HEADER.ID$$,$$GETHH.HEADER.Religion$$,"")

UPDHHETH:
IFGOTO($$GETHH.HEADER.Ethnicity$$,"=","","HHADDHH:")

HHETH=DYNAMICSUPDATEContactEthnicity("x","",$$TP.HEADER.CRMWSUser$$,$$TP.HEADER.CRMWSPass$$,$$P.HEADER.CRMURL$$,"contacts","UPDATE",$$HHGUID.HEADER.ID$$,$$GETHH.HEADER.Ethnicity$$,"")

HHADDHH:
//Add HH household record
HHADDHH=DYNAMICSADDHousehold2("x","",$$TP.HEADER.CRMWSUser$$,$$TP.HEADER.CRMWSPass$$,$$P.HEADER.CRMURL$$,"gcs_households","ADD",$$GETHH.HEADER.TenancyID$$,$$LEADTEN.HEADER.StartDate$$,$$GETHH.HEADER.Personno$$,"Other",$$HHGUID.HEADER.ID$$,$$TENGUID.HEADER.ID$$,$$GETHH.HEADER.Relationship$$)

PROC=SQLUPDHouseholders($$P.HEADER.SQLInstance$$,$$P.HEADER.SQLDatabase$$,$$P.HEADER.SQLUser$$,$$P.HEADER.SQLPassword$$,$$GETHH.HEADER.id$$)

GOTO("GETHH:")

OISWS=OISCRMMyAccountFlag($$P.HEADER.CRM1stTouchURL$$,"text/xml; charset=utf-8",$$P.HEADER.FTouchUpdContURL$$,$$CONTGUID.HEADER.ID$$,"1")


CSARCHIVE=ARCHIVEFILE("C:\ManifestSoftware\TEST\LogFiles\TenancyLogs\log.txt","C:\ManifestSoftware\TEST\LogFiles\TenancyLogs\","")


GOTO("NEXTRECORD:")


//
// Add ERROR Notification
//

//REPORTERROR:

// Create Email Notification
//SETERROREMAIL=SETERROREMAIL("CLEAR","","","","","","","")
//SETERROREMAIL=SETERROREMAIL("SET","CRM Create Tenancy","create a Tenancy","Tenancy Number:",$$TEN.HEADER.TenancyNumber$$,"","",$$TENANCYADD.ERROR$$)

//Send notification to notification queue
//NOTIF=SQLINSERTNotification($$P.HEADER.SQLInstance$$,$$P.HEADER.SQLDatabase$$,$$P.HEADER.SQLUser$$,$$P.HEADER.SQLPassword$$,"Email","Create Tenancy Errors","SOUTHERN HOUSING TEST - Create CRM Tenancy Error",$$SETERROREMAIL.VALUE$$)

NEXTRECORD:

STOPIFEMPTY("")

